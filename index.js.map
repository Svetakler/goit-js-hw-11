{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export { resetDomMarkup, domMarkup };\nconst gallery = document.querySelector('.gallery');\n\nfunction markupGallery(fetchedData) {\n  return fetchedData\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return ` \n<li class=\"thumb\"> \n    <a href=\"${largeImageURL}\" \n            class=\"gallery-item\" > \n    <div class=\"photo-card\"> \n            <img src=\"${webformatURL}\" alt=\"${tags}\"  loading=\"lazy\" \n            class=\"gallery-image\"/> \n        <div class=\"info\"> \n            <p class=\"info-item\"> \n            <b>Likes</b>${likes} \n            </p> \n            <p class=\"info-item\"> \n            <b>Views</b>${views} \n            </p> \n            <p class=\"info-item\"> \n            <b>Comments</b>${comments} \n            </p> \n            <p class=\"info-item\"> \n            <b>Downloads</b>${downloads} \n            </p> \n         </div> \n    </div> \n    </a> \n</li>`;\n      }\n    )\n    .join('');\n}\n\nfunction resetDomMarkup() {\n  gallery.innerHTML = '';\n}\n\nfunction domMarkup(resp) {\n  gallery.insertAdjacentHTML('beforeend', markupGallery(resp));\n}\n","const API_KEY =\n  '46856425-450f7e6938fc07d9efbff3295';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport default function fetchImages(query) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: encodeURIComponent(query),\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  const url = `${BASE_URL}?${params.toString()}`;\n\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Error fetching images.');\n      }\n      return response.json();\n    })\n    .then(data => {\n      if (data.hits.length === 0) {\n        iziToast.error({\n          position: 'topRight',\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      }\n\n      return data.hits;\n    })\n    .catch(error => {\n      iziToast.error({\n        position: 'topRight',\n        title: 'Error',\n        message: 'Error fetching images. Try again!',\n      });\n      console.error('Error fetching images:', error);\n    });\n}\n","import { resetDomMarkup, domMarkup } from './js/render-functions';\nimport fetchImages from './js/pixabay-api';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst loader = document.querySelector('.loader');\nconst form = document.querySelector('#search-form');\nlet instanse = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  let query = evt.currentTarget.searchQuery.value.trim();\n\n  if (query === '') {\n    return iziToast.info({\n      position: 'topRight',\n      title: 'Sorry',\n      message: 'Please, type what you what to search!',\n    });\n  }\n\n  resetDomMarkup();\n  showLoader();\n\n  fetchImages(query)\n    .then(resp => {\n      domMarkup(resp);\n      instanse.refresh('show.simplelightbox');\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error);\n      iziToast.error({\n        position: 'topRight',\n        title: 'Error',\n        message:\n          'Something went wrong while fetching images. Please try again later!',\n      });\n    })\n    .finally(() => {\n      hideLoader();\n      form.reset();\n    });\n}\n\nfunction showLoader() {\n  loader.classList.remove('hidden');\n}\n\nfunction hideLoader() {\n  loader.classList.add('hidden');\n}\n"],"names":["gallery","markupGallery","fetchedData","webformatURL","largeImageURL","tags","likes","views","comments","downloads","resetDomMarkup","domMarkup","resp","API_KEY","BASE_URL","fetchImages","query","params","url","response","data","iziToast","error","loader","form","instanse","SimpleLightbox","onSubmitForm","evt","showLoader","hideLoader"],"mappings":"6vBACA,MAAMA,EAAU,SAAS,cAAc,UAAU,EAEjD,SAASC,EAAcC,EAAa,CAClC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,eAEAL,CAAa;AAAA;AAAA;AAAA,wBAGJD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,0BAIxBC,CAAK;AAAA;AAAA;AAAA,0BAGLC,CAAK;AAAA;AAAA;AAAA,6BAGFC,CAAQ;AAAA;AAAA;AAAA,8BAGPC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAOlC,EACA,KAAK,EAAE,CACZ,CAEA,SAASC,GAAiB,CACxBV,EAAQ,UAAY,EACtB,CAEA,SAASW,EAAUC,EAAM,CACvBZ,EAAQ,mBAAmB,YAAaC,EAAcW,CAAI,CAAC,CAC7D,CClDA,MAAMC,EACJ,qCACIC,EAAW,2BAKF,SAASC,EAAYC,EAAO,CACzC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKJ,EACL,EAAG,mBAAmBG,CAAK,EAC3B,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EAEKE,EAAM,GAAGJ,CAAQ,IAAIG,EAAO,SAAU,CAAA,GAE5C,OAAO,MAAMC,CAAG,EACb,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAE1C,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,IACAA,EAAK,KAAK,SAAW,GACvBC,EAAS,MAAM,CACb,SAAU,WACV,MAAO,QACP,QACE,0EACZ,CAAS,EAGID,EAAK,KACb,EACA,MAAME,GAAS,CACdD,EAAS,MAAM,CACb,SAAU,WACV,MAAO,QACP,QAAS,mCACjB,CAAO,EACD,QAAQ,MAAM,yBAA0BC,CAAK,CACnD,CAAK,CACL,CCtCA,MAAMC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAO,SAAS,cAAc,cAAc,EAClD,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAEDF,EAAK,iBAAiB,SAAUG,CAAY,EAE5C,SAASA,EAAaC,EAAK,CACzBA,EAAI,eAAc,EAElB,IAAIZ,EAAQY,EAAI,cAAc,YAAY,MAAM,OAEhD,GAAIZ,IAAU,GACZ,OAAOK,EAAS,KAAK,CACnB,SAAU,WACV,MAAO,QACP,QAAS,uCACf,CAAK,EAGHX,IACAmB,IAEAd,EAAYC,CAAK,EACd,KAAKJ,GAAQ,CACZD,EAAUC,CAAI,EACda,EAAS,QAAQ,qBAAqB,CAC5C,CAAK,EACA,MAAMH,GAAS,CACd,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CD,EAAS,MAAM,CACb,SAAU,WACV,MAAO,QACP,QACE,qEACV,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbS,IACAN,EAAK,MAAK,CAChB,CAAK,CACL,CAEA,SAASK,GAAa,CACpBN,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEA,SAASO,GAAa,CACpBP,EAAO,UAAU,IAAI,QAAQ,CAC/B"}